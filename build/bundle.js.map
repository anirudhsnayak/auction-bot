{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/layouts/app/AuctionHeader.svelte","../../src/scripts/app/config/AuctionFinderConfig.ts","../../src/scripts/app/AuctionFinder/AuctionQuery.ts","../../src/scripts/app/AuctionFinder/AuctionSeparator.ts","../../src/scripts/app/AuctionFinder/AuctionEstimatedValue.ts","../../src/scripts/app/AuctionFinder/AuctionFinder.ts","../../src/scripts/app/render/AuctionDisplayManager.ts","../../src/layouts/app/AuctionConfig.svelte","../../src/layouts/page/content/AuctionMenu.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\r\n</script>\r\n\r\n<div class = \"main\">\r\n    <h1 class=\"title\">Skyblock Auction Flipper</h1>\r\n    <div class=\"intro\">Hopefully this doesn't break. Keep in mind that this will cache the entire Skyblock\r\n        Auction House (about 60mb) to your personal device every time you refresh, so if you have a limited data plan, I suggest that you don't use this tool. \r\n        Due to API limits, refreshing may take up to 1 minute. The displayed flips are not guaranteed to always make profit, as this algorithm cannot take\r\n        every factor into account, and is still in development. Use common sense. To edit a query without refreshing, click the query button to make queries on\r\n        the currently cached Auction House.\r\n    </div>\r\n</div>\r\n\r\n<style type=\"text/scss\">\r\n    .main{\r\n        margin-left: 1rem;\r\n        padding-top: 0.5rem;\r\n    }\r\n    .intro{\r\n        font-size: 1.5rem;\r\n        margin-bottom: 0.5rem;\r\n        margin-right: 1.5rem;\r\n    }\r\n    .title{\r\n        font-size: 4rem;\r\n        margin-bottom: 0.5rem;\r\n    } \r\n</style>","var _a;\r\n//update this to suit your needs\r\n//TODO: Create more config buttons on the UI if possible\r\nexport default class AuctionFinderConfig {\r\n    static initialize() {\r\n        let m = 1000000;\r\n        let k = 1000;\r\n        this.commodityWatchlist = this.commodityWatchlist.concat(this.skinWatchlist);\r\n        this.petLoreValueTable = { \"Minos Relic\": 30 * m, \"Dwarf Turtle Shelmet\": 2 * m };\r\n        this.loreValueTable = {\r\n            \"§k\": 4 * m, \"§e(+20)\": 300 * k, \"Enriched with\": 2 * m,\r\n            \"Ender Slayer VI\": 500 * k, \"Experience IV\": 200 * k,\r\n            \"Life Steal IV\": 50 * k, \"Smite VII\": 2.5 * m, \"Syphon IV\": 100 * k, \"Vampirism VI\": 200 * k,\r\n            \"Power VI\": 400 * k, \"Fire Protection VII\": 1 * m, \"Blast Protection VII\": 5 * m,\r\n            \"Rejuvenate V\": 400 * k, \"Respite IV\": 100 * k, \"Respite V\": 250 * k,\r\n            \"Respite I\": 50 * k, \"Respite II\": 10 * k, \"Respite III\": 10 * k,\r\n            \"True Protection I\": 500 * k, \"Fortune IV\": 300 * k, \"Harvesting VI\": 200 * k,\r\n            \"Replenish I\": 1 * m, \"Blessing VI\": 1 * m, \"Caster VI\": 400 * k, \"Looting IV\": 50 * k,\r\n            \"Luck of the Sea VI\": 50 * k, \"One For All\": 4 * m, \"Giant Killer VI\": 100 * k\r\n        };\r\n        this.enchantValueTable = {\r\n            \"Dragon Hunter\": 200 * k, \"Overload\": 700 * k, \"Ferocious Mana\": 200 * k, \"Hardened Mana\": 50 * k,\r\n            \"Mana Vampire\": 250 * k, \"Smarty Pants\": 400 * k, \"Sugar Rush\": 100 * k, \"Pristine\": 1 * m,\r\n            \"Turbo-Wheat\": 30 * k, \"Turbo-Carrot\": 50 * k, \"Turbo-Potato\": 100 * k, \"Turbo-Cacti\": 100 * k,\r\n            \"Turbo-Pumpkin\": 100 * k, \"Turbo-Melon\": 50 * k, \"Turbo-Mushrooms\": 50 * k, \"Turbo-Cocoa\": 50 * k,\r\n            \"Turbo-Warts\": 30 * k, \"Charm\": 100 * k, \"Corruption\": 30 * k, \"Chimera\": 100 * m, \"Combo\": 30 * k,\r\n            \"Duplex\": 13 * m, \"Fatal Tempo\": 150 * m, \"Flash\": 2 * m, \"Inferno\": 45 * m, \"Last Stand\": 100 * k,\r\n            \"Legion\": 1 * m, \"Rend\": 200 * k, \"Soul Eater\": 1 * m, \"Swarm\": 500 * k, \"Ultimate Wise\": 100 * k,\r\n            \"Wisdom\": 125 * k\r\n        };\r\n        this.loreValueTable = Object.assign({}, this.loreValueTable, this.petLoreValueTable);\r\n        this.nameValueTable = { \"Withered\": 2.1 * m, \"Ancient\": 600 * k, \"Necrotic\": 300 * k };\r\n        //not really sure if these have a purpose but they're here just in case\r\n        this.loreOverrideTable = {}; //{\"Growth VI\": 0, \"Protection VI\":0};\r\n        this.nameOverrideTable = {};\r\n        return 0;\r\n    }\r\n    static updateConfig(params) {\r\n        if (params.budget != NaN) {\r\n            this.budget = params.budget;\r\n        }\r\n        if (params.maxAuctionDisplayCount != NaN) {\r\n            this.maxAuctionDisplayCount = params.maxAuctionDisplayCount;\r\n        }\r\n        if (params.profitCriteria != NaN) {\r\n            this.profitCriteria = params.profitCriteria;\r\n        }\r\n        this.sortCriteria = params.sortCriteria;\r\n        this.shownItems = params.shownItems;\r\n    }\r\n}\r\n_a = AuctionFinderConfig;\r\nAuctionFinderConfig.maxPageQueries = 100;\r\nAuctionFinderConfig.maxAuctionDisplayCount = 30;\r\nAuctionFinderConfig.minVolume = 4; // need at least 4 items to consider an item\r\nAuctionFinderConfig.budget = 5000000;\r\nAuctionFinderConfig.acceptRawAuctions = true; //needs more testing\r\nAuctionFinderConfig.profitCriteria = 0;\r\nAuctionFinderConfig.sortCriteria = \"Efficiency\";\r\nAuctionFinderConfig.shownItems = {\r\n    pets: true,\r\n    commodities: true,\r\n    talismans: true,\r\n    upgradables: true\r\n};\r\n//starred items go before non-starred items\r\n//basically more specific names go before less specific names\r\nAuctionFinderConfig.skinWatchlist = [\r\n    \"Twilight Tiger Skin\", \"Spirit Skin\", \"Radiant Enderman Skin\", \"Void Conqueror Skin\", \"Golden Monkey Skin\", \"Icicle Skin\", \"Neon Blue Ender Dragon Skin\", \"Black Widow Skin\", \"Reinforced Skin\", \"Pufferfish Skin\",\r\n    \"Neon Red Ender Dragon Skin\", \"Purple Elephant Skin\", \"Red Elephant Skin\", \"Puppy Skin\", \"Green Elephant Skin\", \"Light Blue Sheep Skin\", \"Onyx Black Cat Skin\", \"Light Green Sheep Skin\", \"Blue Elephant Skin\",\r\n    \"White Sheep Skin\", \"Pink Sheep Skin\", \"Black Sheep Skin\", \"Red Sheep Skin\", \"Purple Sheep Skin\", \"Smiling Rock Skin\", \"Pink Elephant Skin\", \"Cool Rock Skin\", \"Laughing Rock Skin\", \"Thinking Rock Skin\",\r\n    \"Orange Elephant Skin\", \"Neon Red Sheep Skin\", \"Neon Blue Sheep Skin\", \"Derpy Rock Skin\", \"Embarrassed Rock Skin\", \"Crimson Skin\", \"Fossilized Silverfish Skin\", \"Pastel Ender Dragon Skin\",\r\n    \"Purple Egged Skin\", \"Green Egged Skin\", \"Orca Blue Whale Skin\", \"Zombie Skeleton Horse Skin\", \"Mauve Skin\", \"Admiral Skin\", \"Enderpack Skin\", \"Watcher Guardian Skin\", \"Grown-up Baby Yeti Skin\",\r\n    \"Snowglobe Skin\", \"Monochrome Elephant Skin\"\r\n];\r\nAuctionFinderConfig.commodityWatchlist = [\r\n    \"Mithril-Plated Drill Engine\", \"Titanium-Plated Drill Engine\",\r\n    \"Krampus Helmet\", \"Ultimate Carrot Candy Upgrade\", \"Jumbo Backpack Upgrade\", \"Enrichment\", \"Chimera I\", \"Pristine V\", \"Pristine I\", \"Soul Eater I\",\r\n    \"Autopet Rules\", \"French Bread\", \"Pioneer Pickaxe\", \"Gorilla Monkey\", \"XX-Large Storage\", \"X-Large Storage\", \"Tier Boost\", \"Beacon V\", \"Beacon IV\", \"Beacon III\", \"Beacon II\", \"Beacon I\",\r\n    \"Infinityboom TNT\", \"Flycatcher\", \"Pumpkin Launcher\", \"Lucky Clover\", \"Lesser Soulflow Engine\", \"Ancient Rose\", \"Reforge Anvil\", \"Exp Share\", \"Exp Share Core\", \"Enchanted Hopper\",\r\n    \"Soul Esoward\", \"Large Storage\", \"Weird Tuba\", \"Judgement Core\", \"Jungle Heart\", \"Plasmaflux Power Orb\", \"Warden Heart\", \"Plasma Nucleus\", \"Null Blade\", \"Overflux Power Orb\",\r\n    \"!RARE Griffin Upgrade Stone\", \"!EPIC Griffin Upgrade Stone\", \"!LEGENDARY Griffin Upgrade Stone\", \"Royal Pigeon\", \"Shard of the Shredded\", \"Vampire Fang\", \"Scythe Shard\", \"Reaper Gem\", \"Washed-up Souvenir\",\r\n    \"Wood Singularity\", \"Tesselated Ender Pearl\", \"Corleonite\", \"Diamante\\u0027s Handle\", \"Necron\\u0027s Handle\", \"Wither Blood\", \"Precursor Gear\", \"Block Zapper\", \"Builder\\u0027s Wand\", \"Overflux Capacitor\",\r\n    \"First Master Star\", \"Second Master Star\", \"Third Master Star\", \"Fourth Master Star\", \"Fifth Master Star\", \"Soulflow Engine\", \"Minos Relic\", \"Braided Griffin Feather\",\r\n    \"Silex\", \"Dragon Horn\", \"Null Edge\", \"Dwarf Turtle Shelmet\", \"Deep Sea Orb\", \"Dragon Claw\", \"Dragon Scale\", \"Recall Potion\", \"Spirit Bone\", \"Spirit Wing\", \"Personal Harp\", \"Lucky Dice\", \"Sadan\\u0027s Brooch\",\r\n    \"Summoning Ring\", \"Perfectly-Cut Fuel Tank\", \"Amber-polished Drill Engine\", \"Gemstone Mixture\", \"Mithril Plate\", \"Golden Plate\", \"Gemstone Fuel Tank\",\r\n    \"Titanium-plated Drill Engine\", \"Jaderald\", \"Warped Stone\", \"Mana Flux Power Orb\", \"Art of War\", \"Wood Singularity\", \"Ruby Power Scroll\", \"Sapphire Power Scroll\", \"Jasper Power Scroll\", \"Amethyst Power Scroll\",\r\n    \"Amber Power Scroll\", \"Opal Power Scroll\", \"Warning Flare\", \"Alert Flare\", \"SOS Flare\", \"Scourge Cloak\", \"Ancient Cloak\", \"Annihilation Cloak\", \"Arachne Crystal\", \"Arachne Fragment\", \"Arachne\\u0027s Keeper Fragment\", \"Archfiend Dice\",\r\n    \"Ghast Cloak\", \"Vanquished Ghast Cloak\", \"Molten Cloak\", \"Destruction Cloak\", \"Dark Queen's Soul Drop\", \"Magma Necklace\", \"Vanquished Magma Necklace\", \"Delirium Necklace\", \"Lava Shell Necklace\", \"Molten Necklace\",\r\n    \"Synthesizer v1\", \"Synthesizer v2\", \"Synthesizer v3\", \"Thunderbolt Necklace\", \"Molten Bracelet\", \"Glowstone Gauntlet\", \"Vanquished Glowstone Gauntlet\", \"Gauntlet of Contagion\", \"Flaming Fist\", \"Magma Lord Gauntlet\",\r\n    \"Demonslayer Gauntlet\", \"Implosion Belt\", \"Scoville Belt\", \"Blaze Belt\", \"Vanquished Blaze Belt\", \"Molten Belt\", \"Diamond Magmafish\", \"Diamond the Fish\", \"Digested Mosquito\", \"Divan\\u0027s Alloy\", \"Divan Fragment\",\r\n    \"Dungeon Chest Key\", \"Emperor's Skull\", \"Empty Thunder Bottle\", \"Thunder in a Bottle\", \"Enderman Cortex Rewriter\", \"Exceedingly Rare Ender Artifact Upgrader\", \"Experiment the Fish\", \"Farming for Dummies\",\r\n    \"Flake the Fish\", \"Fly Swatter\", \"Gabagool the Fish\", \"Game Breaker\", \"Game Annihilator\", \"Game Fixer\", \"Gemstone Chamber\", \"Gift the Fish\", \"Gloomlock Grimoire\", \"God Potion\", \"Gold Magmafish\",\r\n    \"Golden Treat\", \"Goldor the Fish\", \"Great Carrot Candy\", \"Superb Carrot Candy\", \"Ultimate Carrot Candy\", \"Great Spook Staff\", \"Radiant Power Orb\", \"Lesser Orb of Healing\", \"Jingle Bells\",\r\n    \"Atominizer\", \"Control Switch\", \"FTX 3070\", \"Electron Transmitter\", \"Robotron Reflector\", \"Synthetic Heart\", \"Superlite Motor\", \"Ruby-polished Drill Engine\", \"Sapphire-polished Drill Engine\",\r\n    \"Jumbo Backpack\", \"Greater Backpack\", \"Large Backpack\", \"Medium Backpack\", \"Beheaded Horror\", \"Bigfoot\\u0027s Lasso\", \"Blue Cheese Goblin Omelette\", \"Braided Griffin Feather\", \"Chill the Fish\", \"Chyme\",\r\n    \"Clown Disc\", \"Cluck the Fish\", \"Pesto Goblin Omelette\", \"Sunny Side Goblin Omelette\", \"Spicy Goblin Omelette\", \"Goblin Omelette\", \"Wand of Mending\", \"Wand of Restoration\", \"Gyrokinetic Wand\", \"Etherwarp Conduit\",\r\n    \"Wand of Strength\", \"Heat Core\", \"Helix\", \"High Class Archfiend Dice\", \"Hilt of True Ice\", \"Hologram\", \"Horseman\\u0027s Candle\", \"Hunk of Ice\", \"Hunk of Blue Ice\", \"Hyper Catalyst Upgrade\", \"Inferno Fuel Block\",\r\n    \"Inferno Minion Fuel\", \"Jolly Pink Rock\", \"Kat Flower\", \"Kelvin Inverter\", \"Kismet Feather\", \"L.A.S.R.\\u0027s Eye\", \"Livid Fragment\", \"Lucky Clover Core\", \"Magma Core\", \"Magma Lord Fragment\", \"Mana Disintegrator\",\r\n    \"Staff of the Volcano\", \"Mana Disintegrator\", \"Maxor the Fish\", \"Minion Storage X-pender\", \"Mithril-Infused Fuel Tank\", \"Titanium-Infused Fuel Tank\", \"Drill Engine\", \"Fuel Tank\", \"Implosion\", \"Wither Shield\", \"Shadow Warp\",\r\n    \"Wither Impact\", \"Nope the Fish\", \"Null Blade\", \"Null Edge\", \"Oops the Fish\", \"Radioactive Vial\", \"Scorched Power Crystal\", \"Scythe Blade\", \"Shrimp the Fish\", \"Sinful Dice\", \"Spook the Fish\", \"Spooky Shard\", \"Storm the Fish\",\r\n    \"Subzero Inverter\", \"Tactical Insertion\", \"Tier Boost Core\", \"Transmission Tuner\", \"Weak Wolf Catalyst\", \"Wilson\\u0027s Engineering Plans\", \"Colossal Experience Bottle Upgrade\", \"Wither Catalyst\", \"Zog Anvil\",\r\n    \"Serrated Claws\", \"Bigger Teeth\", \"Gold Claws\", \"Reinforced Scales\", \"All Skills Exp Super-Boost\", \"Textbook\", \"Saddle\", \"Jerry 3D Glasses\", \"Crochet Tiger Plushie\", \"Antique Remedies\", \"Flying Pig\", \"Quick Claw\",\r\n    \"!RARE Wisp Upgrade Stone\", \"!EPIC Wisp Upgrade Stone\", \"!LEGENDARY Wisp Upgrade Stone\", \"!EPIC Foraging Exp Boost\", \"!UNCOMMON Fishing Exp Boost\", \"!RARE Fishing Exp Boost\", \"!EPIC Fishing Exp Boost\"\r\n];\r\nAuctionFinderConfig.talismanWatchlist = [\"Personal Compactor 7000\", \"Personal Compactor 6000\", \"Bat Artifact\", \"Golden Jerry Artifact\", \"Hegemony Artifact\", \"Candy Relic\", \"Reaper Orb\", \"Scarf\\u0027s Grimoire\", \"Treasure Artifact\", \"Razor-sharp Shark Tooth Necklace\",\r\n    \"!MYTHIC Beastmaster Crest\", \"!LEGENDARY Beastmaster Crest\", \"!EPIC Beastmaster Crest\", \"!RARE Beastmaster Crest\", \"Wither Relic\", \"Auto Recombobulator\", \"Titanium Relic\", \"Seal of the Family\", \"Ender Artifact\", \"Wither Artifact\", \"Ender Relic\",\r\n    \"Spider Artifact\", \"Treasure Ring\", \"Catacombs Expert Ring\", \"Red Claw Artifact\", \"Spiked Atrocity\", \"Experience Artifact\", \"Soulflow Supercell\", \"Tarantula Talisman\", \"Hunter Ring\", \"Purple Jerry Talisman\", \"Bait Ring\",\r\n    \"Survivor Cube\", \"Zombie Artifact\", \"Speed Artifact\", \"Devour Ring\", \"Wolf Ring\", \"Intimidation Artifact\", \"Frozen Chicken\", \"Bits Talisman\", \"Eternal Hoof\", \"Soulflow Battery\", \"Bat Person Artifact\", \"Blue Jerry Talisman\",\r\n    \"Titanium Ring\", \"Sea Creature Artifact\", \"Personal Compactor 5000\", \"Mineral Talisman\", \"Red Claw Ring\", \"Scarf\\u0027s Studies\", \"Scarf\\u0027s Thesis\", \"Fish Affinity Talisman\", \"Potion Affinity Artifact\", \"Feather Artifact\",\r\n    \"Haste Ring\", \"Crab Hat of Celebration\", \"Blood God Crest\", \"Potato Talisman\", \"Handy Blood Chalice\", \"Pocket Espresso Machine\", \"Jungle Amulet\", \"Hunter Talisman\", \"Wolf Paw\", \"Personal Deletor 4000\", \"Personal Deletor 5000\",\r\n    \"Personal Deletor 6000\", \"Personal Deletor 7000\", \"Titanium Artifact\", \"Talisman of Power\", \"Ring of Power\", \"Artifact of Power\", \"Bat Ring\", \"Intimidation Ring\", \"Jungle Amulet\", \"Bingo Talisman\", \"Bingo Ring\", \"Bingo Artifact\",\r\n    \"Jacobus Register\", \"New Year Cake Bag\", \"Potato Talisman\", \"Dull Shark Tooth Necklace\", \"Honed Shark Tooth Necklace\", \"Sharp Shark Tooth Necklace\", \"Green Jerry Talisman\", \"Blue Jerry Talisman\", \"Purple Jerry Talisman\",\r\n    \"Golden Jerry Artifact\", \"Bat Person Talisman\", \"Bat Person Ring\", \"Bat Talisman\", \"Spider Talisman\", \"Wolf Talisman\", \"Lucky Hoof\", \"Netherrack-Looking Sunshade\", \"Spider Ring\", \"Soulflow Pile\", \"Burststopper Talisman\", \"Burststopper Artifact\",\r\n    \"Candy Ring\", \"Candy Artifact\", \"Farmer Orb\", \"Night Vision Charm\", \"Speed Ring\", \"Feather Ring\", \"Broken Piggy Bank\", \"Cracked Piggy Bank\", \"Piggy Bank\", \"Emerald Ring\", \"Personal Compactor 4000\", \"Treasure Talisman\",\r\n    \"Master Skull - Tier 1\", \"Master Skull - Tier 2\", \"Master Skull - Tier 3\", \"Master Skull - Tier 4\", \"Master Skull - Tier 5\", \"Master Skull - Tier 6\", \"Master Skull - Tier 7\", \"Nether Artifact\", \"Blaze Talisman\", \"Pulse Ring\"];\r\nAuctionFinderConfig.upgradableWatchlist = [\"Storm\\u0027s Boots ✪✪✪✪✪\", \"Necron\\u0027s Boots ✪✪✪✪✪\", \"Goldor\\u0027s Boots ✪✪✪✪✪\",\r\n    \"Storm\\u0027s Leggings ✪✪✪✪✪\", \"Necron\\u0027s Leggings ✪✪✪✪✪\", \"Goldor\\u0027s Leggings ✪✪✪✪✪\",\r\n    \"Storm\\u0027s Chestplate ✪✪✪✪✪\", \"Necron\\u0027s Chestplate ✪✪✪✪✪\", \"Goldor\\u0027s Chestplate ✪✪✪✪✪\",\r\n    \"Livid Dagger ✪✪✪✪✪\", \"Flower of Truth ✪✪✪✪✪\", \"Reaper Mask ✪✪✪✪✪\",\r\n    \"Axe of the Shredded ✪✪✪✪✪\", \"Shadow Assassin Chestplate ✪✪✪✪✪\", \"Necron\\u0027s Blade\",\r\n    \"Juju Shortbow ✪✪✪✪✪\", \"Wand of Atonement\", \"Vorpal Katana\", \"Wither Goggles ✪✪✪✪✪\", \"End Stone Sword\",\r\n    \"Warden Helmet\", \"Atomsplit Katana\", \"Aspect of the End\", \"Aspect of the Dragons\", \"Frozen Scythe\", \"Revenant Falchion\",\r\n    \"Golem Sword\", \"Raider Axe\", \"Twilight Dagger\", \"Explosive Bow\", \"Magma Bow\", \"Slime Bow\", \"Scorpion Bow\", \"Hurricane Bow\",\r\n    \"Runaan\\u0027s Bow\", \"Death Bow\", \"Spider Queen\\u0027s Stinger\", \"Venom\\u0027s Touch\", \"Souls Rebound\", \"Mosquito Bow\",\r\n    \"Ornate Zombie Sword\", \"Recluse Fang\", \"Edible Mace\", \"Voidedge Katana\", \"Tactician\\u0027s Sword\", \"Blade of the Volcano\",\r\n    \"Ragnarock Axe\", \"Fire Freeze Staff\", \"Ember Rod\", \"Fire Fury Staff\", \"Scorpion Foil\", \"Shaman Sword\", \"Aspect of the Void\",\r\n    \"Reaper Falchion\", \"Emerald Blade\", \"Ink Wand\", \"Kindlebane Dagger\", \"Mawdredge Dagger\", \"Leaping Sword\", \"Vorpal Katana\",\r\n    \"Sword of Revelations\", \"Enrager\", \"Pooch Sword\", \"Ghoul Buster\", \"Soul Whip\", \"Pyrochaos Dagger\", \"Deathripper Dagger\",\r\n    \"Yeti Sword\", \"Silk-Edge Sword\", \"Florid Zombie Sword\", \"Gemstone Gauntlet\", \"Daedalus Axe\", \"Phantom Rod\", \"Pigman Sword\",\r\n    \"Atomsplit Katana\", \"Reaper Scythe\", \"Bonzo\\u0027s Staff\", \"Adaptive Blade\", \"Spirit Sceptre\", \"Ice Spray Wand\", \"Livid Dagger\",\r\n    \"Shadow Fury\", \"Fel Sword\", \"Wither Cloak Sword\", \"Necromancer Sword\", \"Giant\\u0027s Sword\", \"Hyperion\", \"Astraea\", \"Scylla\",\r\n    \"Aurora Staff\", \"Jungle Pickaxe\", \"Refined Mithril Pickaxe\", \"Titanium Pickaxe\", \"Refined Titanium Pickaxe\", \"Titanium Pickaxe\",\r\n    \"Stonk\", \"Pickonimbus 2000\", \"Mithril Drill SX-R226\", \"Mithril Drill SX-R326\", \"Titanium Drill DR-X355\", \"Titanium Drill DR-X455\",\r\n    \"Titanium Drill DR-X555\", \"Titanium Drill DR-X655\", \"Divan\\u0027s Drill\", \"Ruby Drill TX-15\", \"Gemstone Drill LT-522\",\r\n    \"Topaz Drill KGR-12\", \"Jasper Drill X\", \"Coco Chopper\", \"Melon Dicer\", \"Treecapitator\", \"Pumpkin Dicer\", \"Fungi Cutter\", \"Cactus Knife\",\r\n    \"Euclid\\u0027s Wheat Hoe\", \"Gauss Carrot Hoe\", \"Pythagorean Potato Hoe\", \"Turing Sugar Cane Hoe\", \"Newton Nether Warts Hoe\",\r\n    \"Speedster Rod\", \"Winter Rod\", \"Challenging Rod\", \"Rod of Champions\", \"Rod of Legends\", \"Yeti Rod\", \"Auger Rod\", \"Rod of the Sea\",\r\n    \"Magma Rod\", \"Inferno Rod\", \"Hellfire Rod\", \"Shredder\", \"Phantom Rod\", \"Fire Veil Wand\",\r\n    \"Valkyrie\", \"Dark Claymore\", \"Spirit Bow\", \"Bonemerang\", \"Last Breath\", \"Terminator\", \"Voodoo Doll\",\r\n    \"Shimmering Light Hood\", \"Shimmering Light Tunic\", \"Shimmering Light Trousers\", \"Shimmering Light Slippers\",\r\n    \"Rampart Helmet\", \"Rampart Chestplate\", \"Rampart Leggings\", \"Rampart Boots\", \"Helmet of the Pack\", \"Chestplate of the Pack\",\r\n    \"Leggings of the Pack\", \"Boots of the Pack\", \"Armor of Magma Helmet\", \"Armor of Magma Chestplate\", \"Armor of Magma Leggings\",\r\n    \"Armor of Magma Boots\", \"Emerald Helmet\", \"Emerald Chestplate\", \"Emerald Leggings\", \"Emerald Boots\",\r\n    \"Crystal Helmet\", \"Crystal Chestplate\", \"Crystal Leggings\", \"Crystal Boots\",\r\n    \"Zombie Chestplate\", \"Zombie Leggings\", \"Zombie Boots\",\r\n    \"Revenant Chestplate\", \"Revenant Leggings\", \"Revenant Boots\",\r\n    \"Reaper Chestplate\", \"Reaper Leggings\", \"Reaper Boots\",\r\n    \"Flamebreaker Helmet\", \"Flamebreaker Chestplate\", \"Flamebreaker Leggings\", \"Flamebreaker Boots\",\r\n    \"Blaze Helmet\", \"Blaze Chestplate\", \"Blaze Leggings\", \"Blaze Boots\",\r\n    \"Cheap Tuxedo Jacket\", \"Cheap Tuxedo Pants\", \"Cheap Tuxedo Oxfords\",\r\n    \"Fancy Tuxedo Jacket\", \"Fancy Tuxedo Pants\", \"Fancy Tuxedo Oxfords\",\r\n    \"Elegant Tuxedo Jacket\", \"Elegant Tuxedo Pants\", \"Elegant Tuxedo Oxfords\",\r\n    \"Ender Helmet\", \"Ender Chestplate\", \"Ender Leggings\", \"Ender Boots\",\r\n    \"Speedster Helmet\", \"Speedster Chestplate\", \"Speedster Leggings\", \"Speedster Boots\",\r\n    \"Sponge Helmet\", \"Sponge Chestplate\", \"Sponge Leggings\", \"Spongy Shoes\",\r\n    \"Mastiff Helmet\", \"Mastiff Chestplate\", \"Mastiff Leggings\", \"Mastiff Boots\",\r\n    \"Tarantula Helmet\", \"Tarantula Chestplate\", \"Tarantula Leggings\", \"Tarantula Boots\",\r\n    \"Spooky Helmet\", \"Spooky Chestplate\", \"Spooky Leggings\", \"Spooky Boots\",\r\n    \"Snow Suit Helmet\", \"Snow Suit Chestplate\", \"Snow Suit Leggings\", \"Snow Suit Boots\",\r\n    \"Mineral Helmet\", \"Mineral Chestplate\", \"Mineral Leggings\", \"Mineral Boots\",\r\n    \"Glacite Helmet\", \"Glacite Chestplate\", \"Glacite Leggings\", \"Glacite Boots\",\r\n    \"Helmet of the Rising Sun\", \"Chestplate of the Rising Sun\", \"Leggings of the Rising Sun\", \"Boots of the Rising Sun\",\r\n    \"Great Spook Helmet\", \"Great Spook Chestplate\", \"Great Spook Leggings\", \"Great Spook Boots\",\r\n    \"Berserker Helmet\", \"Berserker Chestplate\", \"Berserker Leggings\", \"Berserker Boots\",\r\n    \"Shark Scale Helmet\", \"Shark Scale Chestplate\", \"Shark Scale Leggings\", \"Shark Scale Boots\",\r\n    \"Bat Person Helmet\", \"Bat Person Chestplate\", \"Bat Person Leggings\", \"Bat Person Boots\",\r\n    \"Diver\\u0027s Mask\", \"Diver\\u0027s Shirt\", \"Diver\\u0027s Trunks\", \"Diver\\u0027s Boots\",\r\n    \"Werewolf Helmet\", \"Werewolf Chestplate\", \"Werewolf Leggings\", \"Werewolf Boots\",\r\n    \"Frozen Blaze Helmet\", \"Frozen Blaze Chestplate\", \"Frozen Blaze Leggings\", \"Frozen Blaze Boots\",\r\n    \"Young Dragon Helmet\", \"Young Dragon Chestplate\", \"Young Dragon Leggings\", \"Young Dragon Boots\",\r\n    \"Old Dragon Helmet\", \"Old Dragon Chestplate\", \"Old Dragon Leggings\", \"Old Dragon Boots\",\r\n    \"Wise Dragon Helmet\", \"Wise Dragon Chestplate\", \"Wise Dragon Leggings\", \"Wise Dragon Boots\",\r\n    \"Protector Dragon Helmet\", \"Protector Dragon Chestplate\", \"Protector Dragon Leggings\", \"Protector Dragon Boots\",\r\n    \"Strong Dragon Helmet\", \"Strong Dragon Chestplate\", \"Strong Dragon Leggings\", \"Strong Dragon Boots\",\r\n    \"Unstable Dragon Helmet\", \"Unstable Dragon Chestplate\", \"Unstable Dragon Leggings\", \"Unstable Dragon Boots\",\r\n    \"Superior Dragon Helmet\", \"Superior Dragon Chestplate\", \"Superior Dragon Leggings\", \"Superior Dragon Boots\",\r\n    \"Holy Dragon Helmet\", \"Holy Dragon Chestplate\", \"Holy Dragon Leggings\", \"Holy Dragon Boots\",\r\n    \"Sorrow Helmet\", \"Sorrow Chestplate\", \"Sorrow Leggings\", \"Sorrow Boots\",\r\n    \"Final Destination Helmet\", \"Final Destination Chestplate\", \"Final Destination Leggings\", \"Final Destination Boots\",\r\n    \"Helmet of Divan\", \"Chestplate of Divan\", \"Leggings of Divan\", \"Boots of Divan\",\r\n    \"Magma Lord Helmet\", \"Magma Lord Chestplate\", \"Magma Lord Leggings\", \"Magma Lord Boots\",\r\n    \"Infernal Crimson Helmet\", \"Infernal Crimson Chestplate\", \"Infernal Crimson Leggings\", \"Infernal Crimson Boots\",\r\n    \"Fiery Crimson Helmet\", \"Fiery Crimson Chestplate\", \"Fiery Crimson Leggings\", \"Fiery Crimson Boots\",\r\n    \"Burning Crimson Helmet\", \"Burning Crimson Chestplate\", \"Burning Crimson Leggings\", \"Burning Crimson Boots\",\r\n    \"Hot Crimson Helmet\", \"Hot Crimson Chestplate\", \"Hot Crimson Leggings\", \"Hot Crimson Boots\",\r\n    \"Crimson Helmet\", \"Crimson Chestplate\", \"Crimson Leggings\", \"Crimson Boots\",\r\n    \"Infernal Aurora Helmet\", \"Infernal Aurora Chestplate\", \"Infernal Aurora Leggings\", \"Infernal Aurora Boots\",\r\n    \"Fiery Aurora Helmet\", \"Fiery Aurora Chestplate\", \"Fiery Aurora Leggings\", \"Fiery Aurora Boots\",\r\n    \"Burning Aurora Helmet\", \"Burning Aurora Chestplate\", \"Burning Aurora Leggings\", \"Burning Aurora Boots\",\r\n    \"Hot Aurora Helmet\", \"Hot Aurora Chestplate\", \"Hot Aurora Leggings\", \"Hot Aurora Boots\",\r\n    \"Aurora Helmet\", \"Aurora Chestplate\", \"Aurora Leggings\", \"Aurora Boots\",\r\n    \"Infernal Fervor Helmet\", \"Infernal Fervor Chestplate\", \"Infernal Fervor Leggings\", \"Infernal Fervor Boots\",\r\n    \"Fiery Fervor Helmet\", \"Fiery Fervor Chestplate\", \"Fiery Fervor Leggings\", \"Fiery Fervor Boots\",\r\n    \"Burning Fervor Helmet\", \"Burning Fervor Chestplate\", \"Burning Fervor Leggings\", \"Burning Fervor Boots\",\r\n    \"Hot Fervor Helmet\", \"Hot Fervor Chestplate\", \"Hot Fervor Leggings\", \"Hot Fervor Boots\",\r\n    \"Fervor Helmet\", \"Fervor Chestplate\", \"Fervor Leggings\", \"Fervor Boots\",\r\n    \"Infernal Hollow Helmet\", \"Infernal Hollow Chestplate\", \"Infernal Hollow Leggings\", \"Infernal Hollow Boots\",\r\n    \"Fiery Hollow Helmet\", \"Fiery Hollow Chestplate\", \"Fiery Hollow Leggings\", \"Fiery Hollow Boots\",\r\n    \"Burning Hollow Helmet\", \"Burning Hollow Chestplate\", \"Burning Hollow Leggings\", \"Burning Hollow Boots\",\r\n    \"Hot Hollow Helmet\", \"Hot Hollow Chestplate\", \"Hot Hollow Leggings\", \"Hot Hollow Boots\",\r\n    \"Hollow Helmet\", \"Hollow Chestplate\", \"Hollow Leggings\", \"Hollow Boots\",\r\n    \"Infernal Terror Helmet\", \"Infernal Terror Chestplate\", \"Infernal Terror Leggings\", \"Infernal Terror Boots\",\r\n    \"Fiery Terror Helmet\", \"Fiery Terror Chestplate\", \"Fiery Terror Leggings\", \"Fiery Terror Boots\",\r\n    \"Burning Terror Helmet\", \"Burning Terror Chestplate\", \"Burning Terror Leggings\", \"Burning Terror Boots\",\r\n    \"Hot Terror Helmet\", \"Hot Terror Chestplate\", \"Hot Terror Leggings\", \"Hot Terror Boots\",\r\n    \"Terror Helmet\", \"Terror Chestplate\", \"Terror Leggings\", \"Terror Boots\",\r\n    \"Adaptive Helmet\", \"Adaptive Chestplate\", \"Adaptive Leggings\", \"Adaptive Boots\",\r\n    \"Shadow Assassin Helmet\", \"Shadow Assassin Chestplate\", \"Shadow Assassin Leggings\", \"Shadow Assassin Boots\",\r\n    \"Necromancer Lord Helmet\", \"Necromancer Lord Chestplate\", \"Necromancer Lord Leggings\", \"Necromancer Lord Boots\",\r\n    \"Goldor\\u0027s Helmet\", \"Goldor\\u0027s Chestplate\", \"Goldor\\u0027s Leggings\", \"Goldor\\u0027s Boots\",\r\n    \"Storm\\u0027s Helmet\", \"Storm\\u0027s Chestplate\", \"Storm\\u0027s Leggings\", \"Storm\\u0027s Boots\",\r\n    \"Necron\\u0027s Helmet\", \"Necron\\u0027s Chestplate\", \"Necron\\u0027s Leggings\", \"Necron\\u0027s Boots\",\r\n    \"Maxor\\u0027s Helmet\", \"Maxor\\u0027s Chestplate\", \"Maxor\\u0027s Leggings\", \"Maxor\\u0027s Boots\",\r\n    \"Wither Helmet\", \"Wither Chestplate\", \"Wither Leggings\", \"Wither Boots\",\r\n    \"Skeleton\\u0027s Helmet\", \"Taurus Helmet\", \"Witch Mask\", \"Vampire Mask\", \"Vampire Witch Mask\",\r\n    \"Zombie's Heart\", \"Reaper Mask\", \"Revived Heart\", \"Spirit Mask\", \"Crown of Greed\", \"Warden Helmet\",\r\n    \"Mender Helmet\", \"Mender Fedora\", \"Mender Crown\", \"Dark Goggles\", \"Shadow Goggles\", \"Wither Goggles\",\r\n    \"Bonzo's Mask\", \"Precursor Eye\", \"Crystallized Heart\", \"Golden Bonzo Head\", \"Diamond Bonzo Head\",\r\n    \"Golden Scarf Head\", \"Diamond Scarf Head\", \"Golden Professor Head\", \"Diamond Professor Head\",\r\n    \"Golden Thorn Head\", \"Diamond Thorn Head\", \"Golden Livid Head\", \"Diamond Livid Head\",\r\n    \"Golden Sadan Head\", \"Diamond Sadan Head\", \"Golden Necron Head\", \"Diamond Necron Head\",\r\n    \"Guardian Chestplate\", \"Flaming Chestplate\", \"Obsidian Chestplate\", \"Mithril Coat\",\r\n    \"Stone Chestplate\", \"Metal Chestplate\", \"Steel Chestplate\", \"Creeper Pants\", \"Moogma Leggings\", \"Stereo Pants\",\r\n    \"Farmer Boots\", \"Spider\\u0027s Boots\", \"Spirit Boots\", \"Rancher\\u0027s Boots\", \"Slug Boots\"]; //add midas weapons\r\nAuctionFinderConfig.petWatchlist = [\"!LEGENDARY Baby Yeti\", \"!EPIC Baby Yeti\", \"!LEGENDARY Squid\", \"!LEGENDARY Flying Fish\", \"!LEGENDARY Lion\", \"!LEGENDARY Elephant\",\r\n    \"!LEGENDARY Tiger\", \"!LEGENDARY Black Cat\", \"!EPIC Tiger\", \"!LEGENDARY Blue Whale\", \"!LEGENDARY Rabbit\"]; //fill in the rest of the pets\r\nAuctionFinderConfig.petRarities = [\"COMMON\", \"UNCOMMON\", \"RARE\", \"EPIC\", \"LEGENDARY\", \"MYTHIC\"];\r\nAuctionFinderConfig.petMultiplierTable = { \"!LEGENDARY Wolf\": 7, \"!LEGENDARY Sheep\": 3, \"!LEGENDARY Rabbit\": 5, \"!LEGENDARY Blue Whale\": 24, \"!LEGENDARY Dolphin\": 20,\r\n    \"!EPIC Dolphin\": 9, \"!EPIC Tiger\": 10, \"LEGENDARY Tiger\": 13, \"!LEGENDARY Spider\": 34, \"!LEGENDARY Tarantula\": 19,\r\n    \"!LEGENDARY Elephant\": 8, \"!MYTHIC Bat\": 2, \"!LEGENDARY Bat\": 5, \"!LEGENDARY Ender Dragon\": 13, \"!LEGENDARY Black Cat\": 26,\r\n    \"!LEGENDARY Baby Yeti\": 22, \"!EPIC Baby Yeti\": 7, \"!LEGENDARY Squid\": 10, \"!LEGENDARY Flying Fish\": 18, \"!LEGENDARY Lion\": 24\r\n};\r\nAuctionFinderConfig.auctionConsiderationTime = 5 * 60 * 1000; //ms\r\nAuctionFinderConfig.init = _a.initialize();\r\n","import AuctionFinderConfig from \"../config/AuctionFinderConfig\";\r\nexport default class AuctionQuery {\r\n    static registerProgressCallback(callback) {\r\n        AuctionQuery.progressCallback = callback;\r\n    }\r\n    static sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    static async updateAuctions() {\r\n        let combinedAuctions = [];\r\n        let response = await fetch('https://api.hypixel.net/skyblock/auctions?page=0');\r\n        let data = await response.json();\r\n        let totalPages = data[\"totalPages\"];\r\n        totalPages = Math.min(totalPages, AuctionFinderConfig.maxPageQueries);\r\n        console.log(\"Querying \" + totalPages + \" Pages\");\r\n        for (let i = 0; i < totalPages; i++) {\r\n            console.log(\"Loading Page \" + (i + 1) + \" of \" + totalPages);\r\n            let response = await fetch('https://api.hypixel.net/skyblock/auctions?page=' + String(i));\r\n            let data = await response.json();\r\n            for (let auction of data[\"auctions\"]) {\r\n                combinedAuctions.push(auction);\r\n            }\r\n            //iterate over the auctions, deleting [\"item_bytes\"] from each one\r\n            for (let j = 0; j < combinedAuctions[i].length; j++) {\r\n                delete combinedAuctions[i][j].item_bytes;\r\n            } //saves so much memory\r\n            AuctionQuery.progressCallback((i + 1) / totalPages);\r\n            await AuctionQuery.sleep(AuctionQuery.timeDelay);\r\n        }\r\n        //console.log(combinedAuctions); //rip internet\r\n        return combinedAuctions;\r\n    }\r\n}\r\nAuctionQuery.timeDelay = 100; //just to be safe :)\r\n","import AuctionFinderConfig from \"../config/AuctionFinderConfig\";\r\nexport default class AuctionSeparator {\r\n    //TODO: Simplify a lot\r\n    static separateAuctions(auctions) {\r\n        this.commodityAuctions = {};\r\n        this.upgradableAuctions = {};\r\n        this.talismanAuctions = {};\r\n        this.petAuctions = {};\r\n        this.otherAuctions = [];\r\n        for (let auction of auctions) {\r\n            let exit = false;\r\n            if (this.checkPet(auction)) {\r\n                for (let petType of AuctionFinderConfig.petWatchlist) {\r\n                    if (this.identifyAuction(auction, petType)) {\r\n                        if (petType in this.petAuctions) {\r\n                            this.petAuctions[petType].push(auction);\r\n                        }\r\n                        else {\r\n                            this.petAuctions[petType] = [auction];\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n            for (let commodityType of AuctionFinderConfig.commodityWatchlist) {\r\n                if (this.identifyAuction(auction, commodityType)) {\r\n                    if (commodityType in this.commodityAuctions) {\r\n                        this.commodityAuctions[commodityType].push(auction);\r\n                    }\r\n                    else {\r\n                        this.commodityAuctions[commodityType] = [auction];\r\n                    }\r\n                    exit = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exit) {\r\n                continue;\r\n            }\r\n            for (let talismanType of AuctionFinderConfig.talismanWatchlist) {\r\n                if (this.identifyAuction(auction, talismanType)) {\r\n                    if (talismanType in this.talismanAuctions) {\r\n                        this.talismanAuctions[talismanType].push(auction);\r\n                    }\r\n                    else {\r\n                        this.talismanAuctions[talismanType] = [auction];\r\n                    }\r\n                    exit = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exit) {\r\n                continue;\r\n            }\r\n            for (let upgradableType of AuctionFinderConfig.upgradableWatchlist) {\r\n                if (this.identifyAuction(auction, upgradableType)) {\r\n                    if (upgradableType in this.upgradableAuctions) {\r\n                        this.upgradableAuctions[upgradableType].push(auction);\r\n                    }\r\n                    else {\r\n                        this.upgradableAuctions[upgradableType] = [auction];\r\n                    }\r\n                    exit = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exit) {\r\n                continue;\r\n            }\r\n            this.otherAuctions.push(auction);\r\n        }\r\n        return {\r\n            commodityAuctions: this.commodityAuctions,\r\n            upgradableAuctions: this.upgradableAuctions,\r\n            talismanAuctions: this.talismanAuctions,\r\n            petAuctions: this.petAuctions,\r\n            otherAuctions: this.otherAuctions\r\n        };\r\n    }\r\n    static checkPet(auction) {\r\n        return auction.item_name.includes(\"Lvl\");\r\n    }\r\n    /* TODO: make sure to add a check for tier boost/recomb? */\r\n    static identifyAuction(auction, itemType) {\r\n        let itemName = itemType;\r\n        if (itemType.startsWith(\"!\")) {\r\n            let spaceIndex = itemType.indexOf(\" \");\r\n            let rarity = itemType.substring(1, spaceIndex);\r\n            if (rarity != auction.tier) {\r\n                return false;\r\n            }\r\n            itemName = itemName.substring(spaceIndex + 1);\r\n        }\r\n        return auction.item_name.includes(itemName);\r\n    }\r\n}\r\nAuctionSeparator.commodityAuctions = {};\r\nAuctionSeparator.upgradableAuctions = {};\r\nAuctionSeparator.talismanAuctions = {};\r\nAuctionSeparator.petAuctions = {};\r\nAuctionSeparator.otherAuctions = [];\r\n","import AuctionFinderConfig from \"../config/AuctionFinderConfig\";\r\nexport default class AuctionEstimatedValue {\r\n    static getPetBaseValue(auctionData, auctionType) {\r\n        //TODO: implement\r\n        return AuctionEstimatedValue.getLoreValue(auctionData) +\r\n            AuctionEstimatedValue.getPetLevelValue(auctionData, auctionType);\r\n    }\r\n    static getUpgradableBaseValue(auctionData, auctionType) {\r\n        return AuctionEstimatedValue.getLoreValue(auctionData) +\r\n            AuctionEstimatedValue.getNameValue(auctionData) + AuctionEstimatedValue.getEnchantmentValue(auctionData);\r\n    }\r\n    static getTalismanBaseValue(auctionData, auctionType) {\r\n        return AuctionEstimatedValue.getLoreValue(auctionData);\r\n    }\r\n    static getCommodityBaseValue(auctionData, auctionType) {\r\n        return 0; //what do you expect me to do\r\n    }\r\n    static getLoreValue(auctionData) {\r\n        let loreValue = 0;\r\n        for (let key in AuctionFinderConfig.loreValueTable) {\r\n            if (auctionData.item_lore.includes(key)) {\r\n                if (key in AuctionFinderConfig.loreOverrideTable) {\r\n                    loreValue += AuctionFinderConfig.loreOverrideTable[key];\r\n                }\r\n                else {\r\n                    loreValue += AuctionFinderConfig.loreValueTable[key];\r\n                }\r\n            }\r\n        }\r\n        return loreValue;\r\n    }\r\n    static getEnchantmentValue(auctionData) {\r\n        let enchantValue = 0;\r\n        for (let key in AuctionFinderConfig.enchantValueTable) {\r\n            if (auctionData.item_lore.includes(key)) {\r\n                enchantValue += this.getEnchantValue(auctionData.item_lore, key, AuctionFinderConfig.enchantValueTable[key]);\r\n            }\r\n        }\r\n        return enchantValue;\r\n    }\r\n    static getEnchantValue(auctionLore, enchant, baseEnchantValue) {\r\n        let enchantPosition = auctionLore.indexOf(enchant);\r\n        if (enchantPosition == -1) {\r\n            return 0;\r\n        }\r\n        let romanNumeral = auctionLore.substring(enchantPosition + enchant.length + 1, auctionLore.indexOf(\"§\", enchantPosition + enchant.length + 1));\r\n        return baseEnchantValue * Math.pow(2, AuctionEstimatedValue.getRomanNumeralValue(romanNumeral) - 1);\r\n    }\r\n    static getRomanNumeralValue(romanNumeral) {\r\n        //returns roman numeral values between 0 and 10\r\n        //too lazy to implement this properly\r\n        switch (romanNumeral) {\r\n            case \"I\": return 1;\r\n            case \"II\": return 2;\r\n            case \"III\": return 3;\r\n            case \"IV\": return 4;\r\n            case \"V\": return 5;\r\n            case \"VI\": return 6;\r\n            case \"VII\": return 7;\r\n            case \"VIII\": return 8;\r\n            case \"IX\": return 9;\r\n            case \"X\": return 10;\r\n            default: return 0;\r\n        }\r\n    }\r\n    static getNameValue(auctionData) {\r\n        let nameValue = 0;\r\n        for (let key in AuctionFinderConfig.nameValueTable) {\r\n            if (auctionData.item_name.includes(key)) {\r\n                if (key in AuctionFinderConfig.nameOverrideTable) {\r\n                    nameValue += AuctionFinderConfig.nameOverrideTable[key];\r\n                }\r\n                else {\r\n                    nameValue += AuctionFinderConfig.nameValueTable[key];\r\n                }\r\n            }\r\n        }\r\n        return nameValue;\r\n    }\r\n    static getPetLevelValue(auctionData, auctionType) {\r\n        //we're trying to compare a pet's level value to its item value, albeit unsuccessfully\r\n        let level = 0;\r\n        let levelRegex = /\\[Lvl (\\d+)\\]/;\r\n        let levelMatch = levelRegex.exec(auctionData.item_name);\r\n        if (levelMatch) {\r\n            level = parseInt(levelMatch[1]);\r\n        }\r\n        return AuctionFinderConfig.petMultiplierTable[auctionType] * Math.pow(2, level / 5);\r\n    }\r\n}\r\n","import AuctionQuery from \"./AuctionQuery\";\r\nimport AuctionSeparator from \"./AuctionSeparator\";\r\nimport AuctionEstimatedValue from \"./AuctionEstimatedValue\";\r\nimport AuctionFinderConfig from \"../config/AuctionFinderConfig\";\r\n/*\r\n    This class can be improved in the future.\r\n    It's the core algorithm to find the best flips.\r\n\r\n    Potential improvements: (not just in this class)\r\n    - MAKE ANOTHER WATCHLIST FOR SKINS!!!!!!\r\n    - ADD AN OPTION TO REMOVE FAKE FLIPS FROM THE DISPLAY LIST MANUALLY, (so that the list is less cluttered and less pointless)\r\n    - DON'T RECALCULATE FLIPS FOR EACH QUERY. Cache the flip list, and then sort results based on query.\r\n    - Add another identifier to the flip list (that identifies if the flip is the lowest bin)\r\n    - Issue of deadlock, one flip references another\r\n        - Add a buyout system to fix deadlock\r\n    - Make the tax calculation actually accurate\r\n    - Add perfect armor\r\n    - Use historical prices as a better \"price ceiling\", if possible\r\n    - Efficient separation while server is sending AH data\r\n    - Figure out a way to deal with undervalued items bought from NPCs\r\n    - Display Flip Results Separately (commodities tend to be more reliable than other items)\r\n    - Sort using one name for an armor set (instead of listing all of them)\r\n    - Sort using one name for a set of enchanted books (instead of listing all of them)\r\n    - ALL weapons should be checked separately for 5 stars\r\n    - Remove things that are in bazaar from check list\r\n    - Deal with efficiency levels\r\n    - Account for weapon/armor kills\r\n        - Account for compact/cultivating/expertise enchant amt broken\r\n    - Account for upgraded armor (like with scarf frags)\r\n    - Add MORE items to the flip list\r\n    - Stacked Items\r\n    - Account for tier boosts\r\n    - Upgrade flipping?\r\n    - Better pet calculation\r\n    - Master Stars\r\n    - etc...\r\n*/\r\nexport default class AuctionFinder {\r\n    static blacklistUUID(uuid) {\r\n        this.blacklistedUUIDs.push(uuid);\r\n    }\r\n    static findAuctions(callback) {\r\n        AuctionQuery.updateAuctions().then(combinedAuctions => {\r\n            this.findAuctionsImpl(AuctionSeparator.separateAuctions(combinedAuctions));\r\n            this.queryAuctions(callback);\r\n        });\r\n    }\r\n    static compareFlips(a, b) {\r\n        if (AuctionFinderConfig.sortCriteria === \"Profit\") {\r\n            return b.max_profit - a.max_profit;\r\n        }\r\n        if (AuctionFinderConfig.sortCriteria === \"Efficiency\") {\r\n            return (b.max_profit / b.auction.auctionCost) - (a.max_profit / a.auction.auctionCost);\r\n        }\r\n        return b.max_profit - a.max_profit;\r\n    }\r\n    static queryAuctions(callback) {\r\n        //copy flips\r\n        this.queriedFlips = [];\r\n        for (let flip of this.flips) {\r\n            if (this.checkFlipMatchesQuery(flip) && !this.blacklistedUUIDs.includes(flip.auction.auctionData.uuid)) {\r\n                this.queriedFlips.push(flip);\r\n            }\r\n        }\r\n        this.queriedFlips.sort(this.compareFlips);\r\n        console.log(this.queriedFlips);\r\n        callback();\r\n    }\r\n    static checkFlipMatchesQuery(flip) {\r\n        if (flip.auction.auctionCost > AuctionFinderConfig.budget) {\r\n            return false;\r\n        }\r\n        if (flip.max_profit < AuctionFinderConfig.profitCriteria) {\r\n            return false;\r\n        }\r\n        switch (flip.category) {\r\n            case \"Pet\":\r\n                if (!AuctionFinderConfig.shownItems.pets) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case \"Commodity\":\r\n                if (!AuctionFinderConfig.shownItems.commodities) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case \"Talisman\":\r\n                if (!AuctionFinderConfig.shownItems.talismans) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case \"Upgradable\":\r\n                if (!AuctionFinderConfig.shownItems.upgradables) {\r\n                    return false;\r\n                }\r\n                break;\r\n            default:\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    static findAuctionsImpl(auctions) {\r\n        this.flips = [];\r\n        this.bestAuctions = [];\r\n        let petAuctions = auctions.petAuctions;\r\n        let commodityAuctions = auctions.commodityAuctions;\r\n        let talismanAuctions = auctions.talismanAuctions;\r\n        let upgradableAuctions = auctions.upgradableAuctions;\r\n        this.findAuctionsCategory(petAuctions, AuctionEstimatedValue.getPetBaseValue, \"Pet\");\r\n        this.findAuctionsCategory(commodityAuctions, AuctionEstimatedValue.getCommodityBaseValue, \"Commodity\");\r\n        this.findAuctionsCategory(talismanAuctions, AuctionEstimatedValue.getTalismanBaseValue, \"Talisman\");\r\n        this.findAuctionsCategory(upgradableAuctions, AuctionEstimatedValue.getUpgradableBaseValue, \"Upgradable\");\r\n    }\r\n    static findAuctionsCategory(auctions, valueFunction, category) {\r\n        for (let key in auctions) {\r\n            this.findFlips(this.filterAuctions(key, auctions[key], valueFunction), category);\r\n        }\r\n    }\r\n    static filterAuctions(auctionTypeParam, auctionListing, valueFunction) {\r\n        let auctions = [];\r\n        for (let auction of auctionListing) {\r\n            if (auction.bin) {\r\n                auctions.push({\r\n                    auctionType: auctionTypeParam,\r\n                    auctionData: auction,\r\n                    auctionCost: auction.starting_bid,\r\n                    auctionBaseValue: valueFunction(auction, auctionTypeParam)\r\n                });\r\n            }\r\n            else {\r\n                if (AuctionFinderConfig.acceptRawAuctions) {\r\n                    let currentUnixTime = new Date().getTime();\r\n                    if (auction.end - currentUnixTime <= AuctionFinderConfig.auctionConsiderationTime) {\r\n                        auctions.push({\r\n                            auctionType: auctionTypeParam,\r\n                            auctionData: auction,\r\n                            auctionCost: Math.max(auction.starting_bid, auction.highest_bid_amount),\r\n                            auctionBaseValue: valueFunction(auction, auctionTypeParam)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return auctions;\r\n    }\r\n    static findFlips(filteredAuctions, category_) {\r\n        if (filteredAuctions.length < AuctionFinderConfig.minVolume) {\r\n            return;\r\n        }\r\n        let maxBaseValue = -1;\r\n        let auctionSort = filteredAuctions.sort((a, b) => { return a.auctionCost - b.auctionCost; });\r\n        let lowestRawCost = this.rawCostLeastBin(auctionSort);\r\n        for (let i = 0; i < auctionSort.length; i++) {\r\n            let currentAuction = auctionSort[i];\r\n            let optimalFlipPriceIndex = i;\r\n            // if(currentBudget > AuctionFinderConfig.budget){\r\n            //     break; //clearly everything after this exceeds our budget\r\n            // }\r\n            if (maxBaseValue < currentAuction.auctionBaseValue) { //ensures our item is the best we can get\r\n                if (i == auctionSort.length - 1) {\r\n                    this.bestAuctions.push(currentAuction); //to avoid out of bounds error\r\n                    continue;\r\n                }\r\n                if (currentAuction.auctionData.bin) { //bins are used as reference\r\n                    maxBaseValue = currentAuction.auctionBaseValue;\r\n                }\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n            let priceCeiling = lowestRawCost + currentAuction.auctionBaseValue; //using the lowest from last time\r\n            if (currentAuction.auctionData.bin) { //bins are used as reference\r\n                lowestRawCost = Math.min(lowestRawCost, currentAuction.auctionCost - currentAuction.auctionBaseValue);\r\n            }\r\n            //iterate over the remaining array\r\n            for (let j = i + 1; j < auctionSort.length; j++) {\r\n                if (!auctionSort[j].auctionData.bin) {\r\n                    continue; //skip non-bin auctions\r\n                }\r\n                if (auctionSort[j].auctionCost > priceCeiling) {\r\n                    //auctions can't be higher than the price ceiling\r\n                    break; //clearly everything after this is more expensive \r\n                }\r\n                if (currentAuction.auctionBaseValue > auctionSort[j].auctionBaseValue) {\r\n                    let baseValueDifference = currentAuction.auctionBaseValue - auctionSort[j].auctionBaseValue;\r\n                    priceCeiling = Math.min(priceCeiling, auctionSort[j].auctionCost + baseValueDifference);\r\n                    optimalFlipPriceIndex = j;\r\n                }\r\n                else {\r\n                    break; //unlikely that this auction is better than the one which is valued higher\r\n                }\r\n            }\r\n            if (optimalFlipPriceIndex == auctionSort.length - 1) { //we are worth more than all the other auctions\r\n                this.bestAuctions.push(currentAuction);\r\n                continue;\r\n            }\r\n            let min_profit_ = 0.98 * auctionSort[optimalFlipPriceIndex].auctionCost - currentAuction.auctionCost;\r\n            let max_profit_ = 0.98 * auctionSort[optimalFlipPriceIndex + 1].auctionCost - currentAuction.auctionCost;\r\n            //we can't make more than the raw price to make the item\r\n            max_profit_ = Math.min(priceCeiling - currentAuction.auctionCost, max_profit_);\r\n            // if(max_profit_ < AuctionFinderConfig.profitCriteria){continue;} //we don't fit the criteria\r\n            this.flips.push({\r\n                auction: currentAuction,\r\n                min_profit: min_profit_,\r\n                max_profit: max_profit_,\r\n                category: category_\r\n            });\r\n        }\r\n        //all flips have been calculated\r\n    }\r\n    static rawCostLeastBin(auctionSort) {\r\n        for (let i = 0; i < auctionSort.length; i++) {\r\n            if (auctionSort[i].auctionData.bin) {\r\n                return auctionSort[i].auctionCost - auctionSort[i].auctionBaseValue;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nAuctionFinder.flips = [];\r\nAuctionFinder.queriedFlips = [];\r\nAuctionFinder.bestAuctions = [];\r\nAuctionFinder.blacklistedUUIDs = [];\r\n","export default class AuctionDisplayManager {\r\n    static registerAuctionRenderCallback(callback) {\r\n        this.auctionRenderCallback = callback;\r\n    }\r\n    static updateAuctionRender() {\r\n        this.auctionRenderCallback();\r\n    }\r\n}\r\n","<script lang=\"ts\">\r\nimport AuctionFinder from \"../../scripts/app/AuctionFinder/AuctionFinder\";\r\nimport AuctionQuery from \"../../scripts/app/AuctionFinder/AuctionQuery\";\r\nimport AuctionFinderConfig from \"../../scripts/app/config/AuctionFinderConfig\";\r\nimport AuctionDisplayManager from \"../../scripts/app/render/AuctionDisplayManager\";\r\nlet active = true;\r\nlet loadingPercent = 0;\r\nlet budgetInput = \"5,000,000\"; \r\nlet maxDisplay = \"20\";\r\nlet profitCriteria = \"100,000\";\r\nlet sortCriteria = \"Efficiency\";\r\nlet shownItems = {\r\n    pets: true,\r\n    commodities: true,\r\n    talismans: true,\r\n    upgradables: true\r\n}\r\nfunction cleanIntInput(input){\r\n    //remove all commas\r\n    let cleanedInput = input.replace(/,/g, \"\");\r\n    //convert to int\r\n    cleanedInput = parseInt(cleanedInput);\r\n    return cleanedInput;\r\n}\r\nfunction updateConfig(){\r\n    AuctionFinderConfig.updateConfig({\r\n        budget: cleanIntInput(budgetInput),\r\n        maxAuctionDisplayCount: cleanIntInput(maxDisplay),\r\n        profitCriteria: cleanIntInput(profitCriteria),\r\n        sortCriteria: sortCriteria,\r\n        shownItems: shownItems\r\n    });\r\n}\r\nfunction refreshAuction(){\r\n    if(!active){return;}\r\n    active = false;\r\n    updateConfig();\r\n    console.log(\"Refreshing...\")\r\n    AuctionFinder.findAuctions(renderAuctions);\r\n}\r\nfunction queryAuction(){\r\n    updateConfig();\r\n    console.log(\"Querying...\")\r\n    AuctionFinder.queryAuctions(() => {\r\n        console.log(\"Queried!\")\r\n        AuctionDisplayManager.updateAuctionRender();\r\n    });\r\n}\r\nfunction renderAuctions(){\r\n    active = true;\r\n    console.log(\"Refreshed!\");\r\n    AuctionDisplayManager.updateAuctionRender();\r\n    setTimeout(()=>{loadingPercent = 0;}, 500);\r\n}\r\nfunction updateProgress(fractionPagesLoaded){\r\n    loadingPercent = Math.round(fractionPagesLoaded * 100);\r\n}\r\nfunction getActiveClass(check){\r\n    return check ? \"active\" : \"inactive\";\r\n}\r\nAuctionQuery.registerProgressCallback(updateProgress);\r\n</script>\r\n\r\n<div class=\"config\">\r\n    <div class=\"config-title\">Configuration:</div> \r\n    <div class=\"config-menu\">\r\n        <div class=\"field\">\r\n            Budget: <input class =\"input budgetInput\" type=\"text\" bind:value=\"{budgetInput}\"/> \r\n        </div>\r\n        <div class=\"field\">\r\n            Min Profit: <input class =\"input profitCriteriaInput\" type=\"text\" bind:value=\"{profitCriteria}\"/>\r\n        </div>\r\n        <div class=\"field\">\r\n            Max Flips Displayed: <input class =\"input maxDisplayInput\" type=\"text\" bind:value=\"{maxDisplay}\"/>\r\n        </div>\r\n        <div class=\"field\">\r\n            Sort Criteria: <select class =\"input filterCriteriaInput\" bind:value=\"{sortCriteria}\">\r\n                <option value=\"Efficiency\">Efficiency</option>\r\n                <option value=\"Profit\">Profit</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"field\">\r\n            <span class=\"showTitle\">Show:</span>\r\n        </div>\r\n        <div class=\"field\">\r\n            Pets <input type=\"checkbox\" class=\"check\" name=\"showPets\" bind:checked=\"{shownItems.pets}\"/>\r\n        </div>\r\n        <div class=\"field\">  \r\n            Commodities <input type=\"checkbox\" class=\"check\" name=\"showCommodities\" bind:checked=\"{shownItems.commodities}\"/>\r\n        </div>\r\n        <div class=\"field\">\r\n            Talismans <input type=\"checkbox\" class=\"check\" name=\"showTalismans\" bind:checked=\"{shownItems.talismans}\"/>\r\n        </div>    \r\n        <div class=\"field\">    \r\n            Upgradables <input type=\"checkbox\" class=\"check\" name=\"showUpgradables\" bind:checked=\"{shownItems.upgradables}\"/>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"button-container\">\r\n    <button class=\"button queryButton\" on:click=\"{queryAuction}\">\r\n        <p class=\"buttonText\">Query</p>\r\n    </button>\r\n    <button class=\"button refreshButton {getActiveClass(active)}\" on:click=\"{refreshAuction}\">\r\n        <p class=\"buttonText\">{#if active} Refresh {:else} Refreshing...{/if}</p>\r\n    </button>\r\n</div>\r\n<div class=\"progressBar {getActiveClass(active)}\" style=\"width: {loadingPercent}%\"></div>\r\n\r\n<style lang=\"scss\">\r\n    .config{\r\n        font-size: 1.5rem;\r\n        margin-left: 1rem;\r\n    }\r\n    .config-title{\r\n        font-size: 2.5rem;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .config-menu{\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .field{\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .check{\r\n        width: 2rem;\r\n        height: 2rem;\r\n        margin-bottom: 0rem;\r\n        margin-left: 0.5rem;\r\n        margin-right: 0.5rem;\r\n    }\r\n    .showTitle{\r\n        margin-right: 0.5rem;\r\n    }\r\n    .input{\r\n        height: auto;\r\n        border: 0.25rem solid white;\r\n        border-radius: 0.25rem;\r\n        margin-left: 0.5rem;\r\n        padding: 0.25rem;\r\n        margin-right: 1rem;\r\n        margin-bottom: 0rem;\r\n    }\r\n    .budgetInput{\r\n        width: 11rem;\r\n    }\r\n    .maxDisplayInput{\r\n        width: 3rem;\r\n    }\r\n    .profitCriteriaInput{\r\n        width: 9rem;\r\n    }\r\n\r\n    .button-container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .button{\r\n        height: 3.5rem;\r\n        padding-left: 2.5rem;\r\n        padding-right: 2.5rem;\r\n        margin-left: 0.5rem;\r\n        border-radius: 1.5rem;\r\n        border: 1.5px solid white;\r\n    }\r\n    .button.inactive{\r\n        background: rgb(188, 9, 9);\r\n    }\r\n    .queryButton{\r\n        background: rgb(206, 137, 8);\r\n    }\r\n    .queryButton:hover{\r\n        background: rgb(180, 117, 0);\r\n        cursor: pointer;\r\n    }\r\n    .queryButton:active{\r\n        background: rgb(158, 103, 0);\r\n    }\r\n    .refreshButton{\r\n        background: darkcyan; \r\n    }\r\n    .refreshButton.active:hover{\r\n        background: rgb(21, 128, 163);\r\n        cursor: pointer;\r\n    }\r\n    .refreshButton.active:active{\r\n        background: rgb(0, 106, 106);\r\n    }\r\n    .buttonText{\r\n        font-family: \"Helvetica\";\r\n        font-size: 1.75rem;\r\n        color: white;\r\n    }\r\n\r\n    //Progress Bar\r\n    .progressBar{\r\n        background: lime;\r\n        height: 10px;\r\n        position: fixed;\r\n        bottom: 0;\r\n        margin-left: -1rem;\r\n        transition: width 0s;\r\n    }\r\n    .progressBar.inactive{\r\n        opacity: 100%;\r\n        transition: opacity 0.5s, width 1.5s;\r\n    }\r\n    .progressBar.active{\r\n        opacity: 0%; //might need to make its display hiddem\r\n        transition: opacity 0.5s;\r\n    }\r\n</style>","<script lang=\"ts\">\r\nimport AuctionFinder from \"../../../scripts/app/AuctionFinder/AuctionFinder\";\r\nimport AuctionFinderConfig from \"../../../scripts/app/config/AuctionFinderConfig\";\r\nimport AuctionDisplayManager from \"../../../scripts/app/render/AuctionDisplayManager\";\r\nimport AuctionConfig from \"../../app/AuctionConfig.svelte\";\r\nlet flips = []; //[{auction: {auctionData: {bin: true, item_name: \"Aspect of the End\", uuid: \"lol\"}}, min_profit: 5, max_profit: 100000}];\r\nfunction callback(){\r\n    flips = AuctionFinder.queriedFlips.slice(0, AuctionFinderConfig.maxAuctionDisplayCount);\r\n}\r\nfunction copyAuction(i){\r\n    navigator.clipboard.writeText(\"/viewauction \" + flips[i].auction.auctionData.uuid);\r\n}\r\nfunction blacklistAuction(i){\r\n    AuctionFinder.blacklistUUID(flips[i].auction.auctionData.uuid);\r\n    flips.splice(i, 1); \r\n    flips = flips; //force update\r\n}\r\nAuctionDisplayManager.registerAuctionRenderCallback(callback);\r\n</script>\r\n{#if flips.length == 0}\r\n<div class=\"refreshMessage\">\r\n    <p>No flips currently found; refresh to update.</p>\r\n</div>\r\n{/if}\r\n{#each flips as flip, i}\r\n    <div class=\"auctions\">\r\n        <div class=\"auctionBox\">\r\n            <div class=\"delete\">\r\n                <button class = \"deleteButton\" on:click=\"{()=>{blacklistAuction(i)}}\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\"  height=\"20\" style=\"fill:white;\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\r\n                </button>\r\n            </div>\r\n            <div class=\"itemData\">\r\n                <div class=\"name\">\r\n                    {flip.auction.auctionData.item_name}\r\n                    {#if flip.auction.auctionData.bin}\r\n                    <div class=\"auctionType bin\">\r\n                        BIN\r\n                    </div>\r\n                    {:else}\r\n                    <div class=\"auctionType auction\">\r\n                        AUCTION\r\n                    </div>\r\n                    {/if}\r\n                </div>\r\n                <div class=\"profit\">\r\n                    Price: {Math.round(flip.auction.auctionCost).toLocaleString(\"en-US\")} coins <br>\r\n                    Minimum Expected Profit: {Math.round(flip.min_profit).toLocaleString(\"en-US\")} coins <br>\r\n                    Maximum Expected Profit: {Math.round(flip.max_profit).toLocaleString(\"en-US\")} coins\r\n                </div>\r\n            </div>\r\n            <button class=\"copy\" on:click=\"{() => copyAuction(i)}\">\r\n                Copy Auction\r\n            </button>\r\n        </div>\r\n    </div>\r\n{/each}\r\n\r\n<style lang=\"scss\"> \r\n    .refreshMessage{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 2rem;\r\n        text-align: center;\r\n    }\r\n    .delete{\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        border: none;\r\n        margin: 0;\r\n    }\r\n    .deleteButton{\r\n        height: 90%;\r\n        width: 75%;\r\n        border: none;\r\n        background: rgb(247, 45, 86);\r\n        margin: 0;\r\n    }\r\n    .deleteButton:hover{\r\n        background: rgb(215, 43, 77);\r\n        cursor: pointer;\r\n    }\r\n    .deleteButton:active{\r\n        background: rgb(192, 12, 48);\r\n    }\r\n    .name{\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        font-size: 1.6rem;\r\n    }\r\n    .profit{\r\n        font-size: 1.1rem;\r\n    }\r\n    .auctions{\r\n        flex-direction: column;\r\n        border: 0.1rem solid white;\r\n        border-radius: 1rem;\r\n        padding: 0.5rem;\r\n        margin-bottom: 0.5rem;\r\n        margin-left: 1rem;\r\n        margin-right: 1rem;\r\n    }\r\n    .auctionBox{\r\n        display: grid;\r\n        grid-template-columns: 3.5rem max-content auto minmax(5rem, 20rem);\r\n        grid-template-areas: \"delete itemdata empty copy\";\r\n        margin-left: 0.5rem;\r\n        margin-right: 2rem;\r\n    }\r\n    .itemData{\r\n        grid-area: itemdata;\r\n        margin-top: 0.25rem;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .copy{\r\n        grid-area: copy;\r\n        margin-left: 2rem;\r\n        margin-top: 0.5rem;\r\n        background-color: rgb(100, 181, 100);\r\n        color: white;\r\n        border-radius: 0.5rem;\r\n    }\r\n    .copy:hover{\r\n        background-color: rgb(76, 135, 76);\r\n        cursor: pointer;\r\n    }\r\n    .copy:active{\r\n        background-color: rgb(51, 135, 51);\r\n    }\r\n    .auctionType{\r\n        margin-left: 0.75rem;\r\n        border: 1.75px solid white;\r\n        border-radius: 0.5rem;\r\n        padding-left: 0.75rem;\r\n        padding-right: 0.75rem;\r\n        font-size: 1.2rem;\r\n    }\r\n    .bin{\r\n        background: green;\r\n    }\r\n    .auction{\r\n        background: crimson;\r\n    }\r\n</style>","<script>\n\timport AuctionHeader from \"./layouts/app/AuctionHeader.svelte\";\n\timport AuctionConfig from \"./layouts/app/AuctionConfig.svelte\";\n\timport AuctionMenu from \"./layouts/page/content/AuctionMenu.svelte\";\n</script>\n\n\n<div class=\"content\">\n\t<AuctionHeader></AuctionHeader>\n\t<AuctionConfig></AuctionConfig>\n\t<AuctionMenu></AuctionMenu>\n</div>\n\n<style type=\"text/scss\">\n\t@import \"./styles/pageSetup.scss\";\n\t:global(body) {\n\t\tbackground: #292929;\n\t}\n\t.content{\n\t\tmargin-left: 1rem;\n\t\tcolor: white;\n\t}\n</style>\n\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","i","length","option","__value","selected","selectedIndex","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","_a","AuctionFinderConfig","static","k","commodityWatchlist","concat","skinWatchlist","petLoreValueTable","loreValueTable","enchantValueTable","Overload","Pristine","Charm","Corruption","Chimera","Combo","Duplex","Flash","Inferno","Legion","Rend","Swarm","Wisdom","assign","nameValueTable","Withered","Ancient","Necrotic","loreOverrideTable","nameOverrideTable","params","NaN","budget","maxAuctionDisplayCount","profitCriteria","sortCriteria","shownItems","maxPageQueries","minVolume","acceptRawAuctions","pets","commodities","talismans","upgradables","talismanWatchlist","upgradableWatchlist","petWatchlist","petRarities","petMultiplierTable","auctionConsiderationTime","initialize","AuctionQuery","progressCallback","ms","setTimeout","combinedAuctions","response","fetch","totalPages","json","Math","min","console","log","String","auction","j","item_bytes","sleep","timeDelay","AuctionSeparator","auctions","commodityAuctions","upgradableAuctions","talismanAuctions","petAuctions","otherAuctions","exit","checkPet","petType","identifyAuction","commodityType","talismanType","upgradableType","item_name","includes","itemType","itemName","startsWith","spaceIndex","substring","tier","AuctionEstimatedValue","auctionData","auctionType","getLoreValue","getPetLevelValue","getNameValue","getEnchantmentValue","loreValue","item_lore","enchantValue","getEnchantValue","auctionLore","enchant","baseEnchantValue","enchantPosition","romanNumeral","pow","getRomanNumeralValue","nameValue","level","levelMatch","exec","parseInt","AuctionFinder","uuid","blacklistedUUIDs","updateAuctions","findAuctionsImpl","separateAuctions","queryAuctions","max_profit","auctionCost","queriedFlips","flip","flips","checkFlipMatchesQuery","sort","compareFlips","category","bestAuctions","findAuctionsCategory","getPetBaseValue","getCommodityBaseValue","getTalismanBaseValue","getUpgradableBaseValue","valueFunction","findFlips","filterAuctions","auctionTypeParam","auctionListing","bin","starting_bid","auctionBaseValue","currentUnixTime","Date","getTime","end","max","highest_bid_amount","filteredAuctions","category_","maxBaseValue","auctionSort","lowestRawCost","rawCostLeastBin","currentAuction","optimalFlipPriceIndex","priceCeiling","baseValueDifference","min_profit_","max_profit_","min_profit","AuctionDisplayManager","auctionRenderCallback","getActiveClass","cleanIntInput","cleanedInput","replace","check","active","loadingPercent","budgetInput","maxDisplay","updateConfig","renderAuctions","updateAuctionRender","registerProgressCallback","fractionPagesLoaded","round","findAuctions","selected_option","querySelector","toLocaleString","iterations","copyAuction","navigator","clipboard","writeText","blacklistAuction","blacklistUUID","registerAuctionRenderCallback","slice","body"],"mappings":"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"}